// Code generated by goctl. DO NOT EDIT.
// Source: pay.proto

package payclient

import (
	"context"

	"go_jaeger_demo/pay/pay"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PayReq  = pay.PayReq
	PayResp = pay.PayResp

	Pay interface {
		Greet(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*PayResp, error)
	}

	defaultPay struct {
		cli zrpc.Client
	}
)

func NewPay(cli zrpc.Client) Pay {
	return &defaultPay{
		cli: cli,
	}
}

func (m *defaultPay) Greet(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*PayResp, error) {
	client := pay.NewPayClient(m.cli.Conn())
	return client.Greet(ctx, in, opts...)
}
